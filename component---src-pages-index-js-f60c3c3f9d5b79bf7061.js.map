{"version":3,"sources":["webpack:///./src/components/section/section.js","webpack:///./src/components/splash/splash.js","webpack:///./src/pages/index.js","webpack:///./src/components/seo/seo.js"],"names":["Section","_ref","node","react_default","a","createElement","className","frontmatter","theme","dangerouslySetInnerHTML","__html","html","Splash","__webpack_require__","d","__webpack_exports__","query","IndexPage","data","seo","title","splash_splash","allMarkdownRemark","edges","map","_ref2","section_section","key","id","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired"],"mappings":"qHAYeA,UARC,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,WAAaJ,EAAKK,YAAYC,OAC1CL,EAAAC,EAAAC,cAAA,QAAMI,wBAAyB,CAAEC,OAAQR,EAAKS,oBCQrCC,UAZA,kBACbT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,aACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,aACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,kBCTRO,EAAAC,EAAAC,EAAA,0BAAAC,IAeeC,UAVG,SAAAhB,GAAA,IAAGiB,EAAHjB,EAAGiB,KAAH,OAChBf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAKC,MAAM,SACXjB,EAAAC,EAAAC,cAACgB,EAAD,MACCH,EAAKI,kBAAkBC,MAAMC,IAAI,SAAAC,GAAA,IAAGvB,EAAHuB,EAAGvB,KAAH,OAChCC,EAAAC,EAAAC,cAACqB,EAAD,CAASxB,KAAMA,EAAMyB,IAAKzB,EAAK0B,SALrC,IAYaZ,EAAK,8GCLlB,SAASa,EAAT5B,GAAiD,IAAlC6B,EAAkC7B,EAAlC6B,YAAaC,EAAqB9B,EAArB8B,KAAMC,EAAe/B,EAAf+B,KAAMZ,EAASnB,EAATmB,MAC9Ba,EADuCC,EAAAhB,KACvCe,KAaFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACEO,EAAAjC,EAAAC,cAACiC,EAAAlC,EAAD,CACEmC,eAAgB,CACdR,QAEFX,MAAOA,EACPoB,cAAa,QAAUP,EAAKG,aAAahB,MACzCY,KAAM,CACJ,CACES,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAStB,GAEX,CACEuB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAST,EAAKG,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAAStB,GAEX,CACEqB,KAAI,sBACJC,QAASP,IAEXU,OAAOb,KAKfH,EAAIiB,aAAe,CACjBf,KAAI,KACJC,KAAM,GACNF,YAAW,IAGbD,EAAIkB,UAAY,CACdjB,YAAakB,IAAUC,OACvBlB,KAAMiB,IAAUC,OAChBjB,KAAMgB,IAAUE,QAAQF,IAAUG,QAClC/B,MAAO4B,IAAUC,OAAOG,YAGXvB","file":"component---src-pages-index-js-f60c3c3f9d5b79bf7061.js","sourcesContent":["import React from \"react\";\n\nimport \"./section.css\";\n\nconst Section = ({ node }) => {\n  return (\n    <div className={`section ${node.frontmatter.theme}`}>\n      <main dangerouslySetInnerHTML={{ __html: node.html }}/>\n    </div>\n  );\n};\n\nexport default Section;\n","import React from \"react\";\nimport \"./splash.css\";\n\nconst Splash = () => (\n  <div className=\"section splash\">\n    <div className=\"outer\">\n      <div className=\"inner animation\">\n        <h1 className=\"first\">&lt;AKL CSS&gt;</h1>\n        <h1 className=\"second\">&lt;AKL CSS&gt;</h1>\n        <h1 className=\"third left-right\">&lt;AKL CSS&gt;</h1>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Splash;\n","import React from \"react\";\nimport Section from \"../components/section/section\";\nimport SEO from \"../components/seo/seo\";\nimport Splash from \"../components/splash/splash\";\n\nconst IndexPage = ({ data }) => (\n  <div className=\"wrapper y-scroll-snap\">\n    <SEO title=\"Home\"/>\n    <Splash/>\n    {data.allMarkdownRemark.edges.map(({ node }) => (\n      <Section node={node} key={node.id}/>\n    ))}\n  </div>\n);\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark (sort:{fields: frontmatter___order}) {\n      totalCount\n      edges {\n        node {\n        internal {\n        content\n        }\n        html\n          id\n          frontmatter {\n            title\n            order\n            theme\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`;","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        }\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n"],"sourceRoot":""}