{"version":3,"sources":["webpack:///./src/components/emoji/emoji.js","webpack:///./src/pages/404.js","webpack:///./src/components/seo/seo.js"],"names":["Emoji","props","react_default","a","createElement","className","role","aria-label","label","aria-hidden","symbol","divStyle","padding","margin","textAlign","NotFoundPage","style","seo","title","emoji","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired"],"mappings":"qHAWeA,EAVD,SAAAC,GAAK,OACjBC,EAAAC,EAAAC,cAAA,QACEC,UAAU,QACVC,KAAK,MACLC,aAAYN,EAAMO,MAAQP,EAAMO,MAAQ,GACxCC,cAAaR,EAAMO,MAAQ,QAAU,QAEhCP,EAAMS,kBCJTC,EAAW,CACfC,QAAS,OACTC,OAAQ,MACRC,UAAW,UAaEC,UAVM,kBACnBb,EAAAC,EAAAC,cAAA,OAAKY,MAAOL,GACVT,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAKC,MAAM,mBACXhB,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,mEACEF,EAAAC,EAAAC,cAACe,EAAD,CAAOT,OAAO,KAAKF,MAAM,+GCH/B,SAASY,EAATC,GAAiD,IAAlCC,EAAkCD,EAAlCC,YAAaC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,KAAMN,EAASG,EAATH,MAC9BO,EADuCC,EAAAC,KACvCF,KAaFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACEQ,EAAA3B,EAAAC,cAAC2B,EAAA5B,EAAD,CACE6B,eAAgB,CACdT,QAEFL,MAAOA,EACPe,cAAa,QAAUR,EAAKI,aAAaX,MACzCM,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASjB,GAEX,CACEkB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAASjB,GAEX,CACEgB,KAAI,sBACJC,QAASP,IAEXU,OAAOd,KAKfJ,EAAImB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNF,YAAW,IAGbF,EAAIoB,UAAY,CACdlB,YAAamB,IAAUC,OACvBnB,KAAMkB,IAAUC,OAChBlB,KAAMiB,IAAUE,QAAQF,IAAUG,QAClC1B,MAAOuB,IAAUC,OAAOG,YAGXzB","file":"component---src-pages-404-js-ac31b6f2d47d37d4d1c1.js","sourcesContent":["import React from 'react';\nconst Emoji = props => (\n  <span\n    className=\"emoji\"\n    role=\"img\"\n    aria-label={props.label ? props.label : \"\"}\n    aria-hidden={props.label ? \"false\" : \"true\"}\n  >\n        {props.symbol}\n    </span>\n);\nexport default Emoji;","import React from \"react\";\nimport Emoji from \"../components/emoji/emoji\";\nimport SEO from \"../components/seo/seo\";\n\nconst divStyle = {\n  padding: '20px',\n  margin: '5px',\n  textAlign: 'center'\n};\n\nconst NotFoundPage = () => (\n  <div style={divStyle}>\n    <SEO title=\"404: Not found\"/>\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.\n      <Emoji symbol=\"ðŸ˜­\" label=\"Crying\"/>\n    </p>\n  </div>\n);\n\nexport default NotFoundPage;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        }\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n"],"sourceRoot":""}